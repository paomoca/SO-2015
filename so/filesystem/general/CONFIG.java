package so.filesystem.general;
public class CONFIG {

	public static boolean DEBUG_SESSION = false;
	
	public static byte[] DISK_SYSTEMKEY = "0KYHNzQbaIRPe6APYx3NLg5kX3VsEvN52eOYAmJl7YlrahtGOI8xy22RrUUhMyMtPNYWAOEfes376IQIMmHPf1JUE8cwm26xBTN69pF9hCk6jc2f23mXNE2Z8CQLEU9RcJGGXO9Zb3vgzyHB2JhQs0zNf08DEPt6kEWgB0yrXpCcYoljprSVtjGh2rJfJOXmSR2oz8gSADU7y7nBPhznVGMKCKyeCfiUCQWIZ4BHCqq1ul4P1Nlcj9g1K8YorxCF3NAsMELBMlINU9oaNgc04nAX7VqmulOOhAUUCs4D2AV1yJ8aQSkjloBkwBp8StAWgpaP9fuuy4FBKGtHeTRwf4XNZqT3TyNre0PLP7usiijDo2RaXDARleKaEbsISYQBUBUYhrH3QtPV2qJ7bwtcj2uAvlUP4KSDSE5yAuGEoSXs69quHk3OR2aWarXhuvQ7kVeKincMNzo2UzR0XRuW5zq1K1vl0yWR4jXaGurzyjYG0JYRlPk5Ba2sDjHmSOakgjGPAD55OxRTc5ztglNmSXMjU8zrSEGa1slM5LjjxI9e1HUVD4yMc0QZBC6PtLI6snkWGq8fWHTm22q797O5vOyjWiQlDwee2RQM3vreKX1s85mMmgy6a3wzIREuH2ivwJjimp3KjUyUZe3h5tkhQtRnMSfCqw57IZ5IGbOt9b3to44Ghj5k3T8RUX43G0cheT81DYT1VpATlAgQlXCARjyBDEpIuiAB6x9Nfpg1b5SskvJ3oM7Kyl0AM9GTlZOLy1tNRtFejtgfwvZm7inWEFK1AGzftB2RsGlODbKaaNDErZaqYFKnxAkcsmJ0pQtQLo25fUYS9N577F8Hs6BrFc7axv4kkIbLUytFvNUAkIwpWsbTDJ4fCQz9VQXChO4Qsog8wxCILspfR5qb0QNV9a9V8zUYVnSKjBVCtPyyrZpXqz1WmhuYUaWa0XNyKR45wyN2mjXyfOlopxtwhK3BsXBs5jrnREuQMl83gpWxDHTzNYjOgiJCU6eYhAFxjBOl".getBytes();
	public static byte[] CACHE_SYSTEMKEY = "acCiWJJwrNg6RRyCyOns8zOmYTjK06GFZaLRkttMYHUXGUBcXZ8VvqBbPGwch9UMyaPFmVGRMfZujgiJzAwLsBWIfzKmAHHsqJZ5L5jg4iUo7VvGED8JbTgGXMHKZqTiyp1Cj8c2A8E9KbG2tnRkoKk56oHl2w3a1XF0Dz82It6pEmVfKLzLbp1ogZu2LEuUVcONkNkI0fvYEWlzCoeXAwIvEvVwKG2yZq1fYCB8HPwNfMka9Gv10x29shCWMoOaOq63RrD5xAsINqONtlCnFOkmct1rE53Wos8UXx8ZuqYXps7gbMCNhPFvO8UGLB1XWDRcAcbqvtxoYLMTqAEvQ2crCP708GuMcTiINoUymJbecGfJhxyy9yha248vGW0BzUG14ccptuaILzlOt3PEsSnofmC9J9u8JMRls1RS1cPeAiPxG5tt8O2234wK5teSJCAKYs93qa2bzElA8MrPpokF7v2qN0b4UPpCl34l3TDCnpj0mHx8jILlKHCBwuSXnqeecjcte16HDbbRiB1WoTUcrwusCnubxYrUfK5FMZEpOgYhlFmysPZ4Ym2L4zUXTHlRBEeuNjBuKRExigyquvtDlVCi0eZczxfHvoKcKDr1wMynG4PS6KIaqf0byScxHMsgTTuALoWxsrlW8oiXRuy8KmL9BnCOY5CbNA4TFLw2ljzhjNEoCWrpl28YS1Z256yzq9SSGVDVvmTiAqDpYR8mgUZ71nvE8eiz9L39kUphyqSYLZR5lqYuDrlaOJz4x7ciInl2KqlJeRM9azrF5wb2fA2iD7Fm1Q2acRt9MO3XuRwgazI1DktaF0ghOUKYTwamGttUqJoxyX1c83znnA1j6c7mtZD18ZAMtNJl4y6VxGhk8ZN3XeSoSrUscke1OjN84p54ggU0iY50nWvOjFK3CB5QJbOfZDHxLqMi9mLk0vkDJ6c9rzk5w9FhE5ub4O5n5JsaLMgzMYDlPCSwQnpH1BKWkcsOIEcEZesiF1TikxieQNloZrjqX6RpYpZl".getBytes();
	
	public static int METADATA_DISKSYSTEMKEY_OFFSET = 0;
	public static int METADATA_DISKSYSTEMKEY_SIZE = DISK_SYSTEMKEY.length;
	
	public static int METADATA_DIRECTORY_ADDRESS_REFERENCE_OFFSET = METADATA_DISKSYSTEMKEY_SIZE;
	public static int METADATA_DIRECTORY_ADDRESS_REFERENCE_SIZE = 2;
	public static int METADATA_DIRECTORY_ADDRESS_REFERENCE = 0;
	
	//Do not modify. No more than 2 bytes should be used.
	public static int METADATA_DISKFSM_INITIAL_CONTROL_BYTE_OFFSET = METADATA_DIRECTORY_ADDRESS_REFERENCE_OFFSET+METADATA_DIRECTORY_ADDRESS_REFERENCE_SIZE;
	public static int METADATA_DISKFSM_INITIAL_CONTROL_BYTE_SIZE = 2;
	
	public static int INITIAL_METADATA_SIZE = METADATA_DISKSYSTEMKEY_SIZE+METADATA_DIRECTORY_ADDRESS_REFERENCE_SIZE+METADATA_DISKFSM_INITIAL_CONTROL_BYTE_SIZE;
	
	public static int BLOCK_SIZE = 4096;
	
	//There must be a correspondence between the offset and the amount of control bytes.
	public static int DEDUPLICATION_CONTROL_OFFSET = 0;
	public static int DEDUPLICATION_CONTROL_SIZE = 2;
	public static int FREQUENCY_CONTROL_OFFSET = DEDUPLICATION_CONTROL_SIZE; 
	public static int FREQUENCY_CONTROL_SIZE = 2;
	
	public static int CONTROL_BYTES_SIZE = FREQUENCY_CONTROL_SIZE+DEDUPLICATION_CONTROL_SIZE;
	
	public static int BLOCK_PAYLOAD_SIZE = BLOCK_SIZE-CONTROL_BYTES_SIZE;
	public static int ADDRESS_SIZE = 4;

	public static String DISK_LOCATION = "/dev/disk2s2";
	//public static String DISK_LOCATION = "b";
	public static String CACHE_LOCATION = "cacheRawDeviceTestFile";
	
	public static int IDB1_OFFSET = BLOCK_SIZE-2*ADDRESS_SIZE;
	public static int IDB2_OFFSET = BLOCK_SIZE-ADDRESS_SIZE;
	
	//iNode Info
	public static int INODE_INFO_FILE_SIZE_IN_BYTES = 4;
	public static int INODE_INFO_FILE_SIZE_OFFSET = 0;
	public static int INODE_INFO_FILE_ID = 2;
	public static int INODE_INFO_MAX_SIZE = INODE_INFO_FILE_ID + INODE_INFO_FILE_SIZE_IN_BYTES;
	
	public static int DIRECT_POINTERS = (BLOCK_SIZE-(ADDRESS_SIZE*2)-INODE_INFO_MAX_SIZE)/ADDRESS_SIZE;
	public static int IDB_TOTAL_ADDRESSES = BLOCK_SIZE/ADDRESS_SIZE;
	
	
}
